# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow will install Deno and run tests across stable and nightly builds on Windows, Ubuntu and macOS.
# For more information see: https://github.com/denolib/setup-deno

name: Deno

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ${{ matrix.os }} # runs a test on Ubuntu, Windows and macOS

    strategy:
      matrix:
        deno: ["v1.x", "nightly"]
        os: [macOS-latest, windows-latest, ubuntu-latest]

    steps:
      - name: Setup repo
        uses: actions/checkout@v2

      - name: Setup Deno
        uses: denolib/setup-deno@c7d7968ad4a59c159a777f79adddad6872ee8d96
        with:
          deno-version: ${{ matrix.deno }} # tests across multiple Deno versions

      - name: Cache Dependencies
        run: deno cache deps.ts

      - name: Run Tests
        run: deno test -A --unstable
       - name: Setup Python
  uses: actions/setup-python@v2.2.2
  with:
    # Version range or exact version of a Python version to use, using SemVer's version range syntax.
    python-version: # optional, default is 3.x
    # The target architecture (x86, x64) of the Python interpreter.
    architecture: # optional
    # Used to pull python distributions from actions/python-versions. Since there's a default, this is typically not supplied by the user.
    token: # optional, default is ${{ github.token }} 
    - name: python-isort
  # You may pin to the exact commit or the version.
  # uses: isort/isort-action@245468f11b1fda7916b9127e07af532df40286d3
  uses: isort/isort-action@v0.1.0
  with:
    # Version of isort to use
    isortVersion: # optional, default is 
    # files or directories to sort
    sortPaths: # optional, default is .
    # isort configuration options
    configuration: # optional, default is --check-only --diff
    # path(s) to requirements files that should be installed to properly configure third-party imports
    requirementsFiles: # optional, default is 
    - name: Coveralls Python
  # You may pin to the exact commit or the version.
  # uses: AndreMiras/coveralls-python-action@f5fd5c309b39d01599fb92c72d4f7409ea78aec9
  uses: AndreMiras/coveralls-python-action@v20201129
  with:
    # The `GITHUB_TOKEN` or `COVERALLS_REPO_TOKEN`.
    github-token: # optional, default is ${{ github.token }}
    # Set to true if you are using parallel jobs, then use `parallel-finished: true` for the last action.
    parallel: # optional
    # Set to true for the last action when using `parallel: true`.
    parallel-finished: # optional
    # The name of a sub-directory in which the coverage files are to be found.
    base-path: # optional
    # A description of the current job used in connection with parallel.
    flag-name: # optional
    # Set to `true` to increase logger verbosity.
    debug: # optional  {- name: Python Linter
  # You may pin to the exact commit or the version.
  # uses: sunnysid3up/python-linter@93076bd8f740f062069291d738fc70c1b4171c1d
  uses: sunnysid3up/python-linter@v0.1-beta.7
  with:
    # Source file or directory
    source: # optional, default is .
    # Set strictness for lint [low, medium, high]
    strict: # optional, default is medium
    # Mypy options
    mypy-options: # optional, default is 
    # Pylint options
    pylint-options: # optional, default is 
    # Black options
    black-options: # optional, default is 
    # Isort options
    isort-options: # optional, default is 
    # Confirm if source is a Django project
    django: # optional}
